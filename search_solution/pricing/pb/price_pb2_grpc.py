# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import pb.price_pb2 as price__pb2


class ProductPriceServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetProductPriceBySku = channel.unary_unary(
                '/pricing.ProductPriceService/GetProductPriceBySku',
                request_serializer=price__pb2.SingleProductPriceRequest.SerializeToString,
                response_deserializer=price__pb2.ProductPrice.FromString,
                )
        self.GetProductsPricesBySkus = channel.unary_unary(
                '/pricing.ProductPriceService/GetProductsPricesBySkus',
                request_serializer=price__pb2.ProductsPricesRequest.SerializeToString,
                response_deserializer=price__pb2.ProductsPrices.FromString,
                )
        self.GetProductsPricesStreamBySkus = channel.unary_stream(
                '/pricing.ProductPriceService/GetProductsPricesStreamBySkus',
                request_serializer=price__pb2.ProductsPricesRequest.SerializeToString,
                response_deserializer=price__pb2.ProductPrice.FromString,
                )


class ProductPriceServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetProductPriceBySku(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductsPricesBySkus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProductsPricesStreamBySkus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProductPriceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetProductPriceBySku': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductPriceBySku,
                    request_deserializer=price__pb2.SingleProductPriceRequest.FromString,
                    response_serializer=price__pb2.ProductPrice.SerializeToString,
            ),
            'GetProductsPricesBySkus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProductsPricesBySkus,
                    request_deserializer=price__pb2.ProductsPricesRequest.FromString,
                    response_serializer=price__pb2.ProductsPrices.SerializeToString,
            ),
            'GetProductsPricesStreamBySkus': grpc.unary_stream_rpc_method_handler(
                    servicer.GetProductsPricesStreamBySkus,
                    request_deserializer=price__pb2.ProductsPricesRequest.FromString,
                    response_serializer=price__pb2.ProductPrice.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'pricing.ProductPriceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProductPriceService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetProductPriceBySku(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pricing.ProductPriceService/GetProductPriceBySku',
            price__pb2.SingleProductPriceRequest.SerializeToString,
            price__pb2.ProductPrice.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProductsPricesBySkus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/pricing.ProductPriceService/GetProductsPricesBySkus',
            price__pb2.ProductsPricesRequest.SerializeToString,
            price__pb2.ProductsPrices.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetProductsPricesStreamBySkus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/pricing.ProductPriceService/GetProductsPricesStreamBySkus',
            price__pb2.ProductsPricesRequest.SerializeToString,
            price__pb2.ProductPrice.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
